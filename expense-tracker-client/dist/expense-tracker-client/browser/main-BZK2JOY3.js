import{f as N}from"./chunk-ECSXLFUR.js";import{D as m,E as f,G as c,H as p,Ha as T,J as g,K as A,M as v,Y as k,Ya as S,bb as R,cb as C,db as E,eb as M,gb as w,hb as j,ib as x,j as n,jb as s,lb as z,ob as a,ra as I,s as u,z as d}from"./chunk-FJFZTGVN.js";var b=[{path:"auth",loadChildren:()=>import("./chunk-RFQKTFWS.js").then(t=>t.AuthModule)},{path:"dashboard",loadChildren:()=>import("./chunk-Y4FFRECA.js").then(t=>t.DashboardModule)},{path:"",redirectTo:"auth/login",pathMatch:"full"},{path:"**",redirectTo:"auth/login"}];var F=(()=>{class t{constructor(e,o){this.authService=e,this.router=o,this.isRefreshing=!1}intercept(e,o){if(e.url.includes("/api/Auth/login")||e.url.includes("/api/Auth/register"))return console.log("AuthInterceptor - Skipping auth for login/register request"),o.handle(e);let r=this.authService.getStoredToken();if(console.log("AuthInterceptor - URL:",e.url),console.log("AuthInterceptor - Token exists:",!!r),console.log("AuthInterceptor - Token value:",r),r)e=this.addToken(e,r),console.log("AuthInterceptor - Request headers after token added:",e.headers.has("Authorization")?e.headers.get("Authorization"):"No Authorization header found");else return console.log("AuthInterceptor - No token found, redirecting to login"),this.router.navigate(["/auth/login"]),n(()=>new Error("Authentication required"));return o.handle(e).pipe(u(i=>(console.log("AuthInterceptor - Error:",i.status,i.message),i.status===401?this.handle401Error(e,o):n(()=>i))))}addToken(e,o){return console.log("AuthInterceptor - Adding token to request"),e.clone({setHeaders:{Authorization:`Bearer ${o}`}})}handle401Error(e,o){if(!this.isRefreshing){this.isRefreshing=!0;let r=localStorage.getItem("refreshToken");if(r)return this.authService.refreshToken(r).pipe(d(()=>{this.isRefreshing=!1;let i=this.authService.getStoredToken();return o.handle(this.addToken(e,i))}),u(i=>(this.isRefreshing=!1,this.authService.logout(),this.router.navigate(["/auth/login"]),n(()=>i))))}return this.authService.logout(),this.router.navigate(["/auth/login"]),n(()=>new Error("Session expired"))}static{this.\u0275fac=function(o){return new(o||t)(c(a),c(s))}}static{this.\u0275prov=m({token:t,factory:t.\u0275fac})}}return t})();var H=(()=>{class t{static{this.\u0275fac=function(o){return new(o||t)}}static{this.\u0275mod=A({type:t})}static{this.\u0275inj=f({providers:[a,{provide:R,useClass:F,multi:!0}],imports:[S,M]})}}return t})();var D=(t,l)=>{let e=p(a),o=p(s);if(t.url.includes("/api/Auth/login")||t.url.includes("/api/Auth/register"))return console.log("AuthInterceptor - Skipping auth for login/register request"),l(t);let r=e.getStoredToken();if(console.log("AuthInterceptor - URL:",t.url),console.log("AuthInterceptor - Token exists:",!!r),console.log("AuthInterceptor - Token value:",r),r){let i=t.clone({setHeaders:{Authorization:`Bearer ${r}`}});return console.log("AuthInterceptor - Request headers after token added:",i.headers.has("Authorization")?i.headers.get("Authorization"):"No Authorization header found"),l(i).pipe(u(h=>(console.log("AuthInterceptor - Error:",h.status,h.message),h.status===401&&(e.logout(),o.navigate(["/auth/login"])),n(()=>h))))}else return console.log("AuthInterceptor - No token found, redirecting to login"),o.navigate(["/auth/login"]),n(()=>new Error("Authentication required"))};var L={providers:[z(b),N(),C(E([D])),v(H)]};var P=(()=>{class t{constructor(e){this.router=e,this.title="Expense Tracker",this.router.events.subscribe(o=>{o instanceof j&&console.log("Current URL:",o.url)})}static{this.\u0275fac=function(o){return new(o||t)(k(s))}}static{this.\u0275cmp=g({type:t,selectors:[["app-root"]],standalone:!0,features:[T],decls:1,vars:0,template:function(o,r){o&1&&I(0,"router-outlet")},dependencies:[x]})}}return t})();w(P,L).catch(t=>console.error(t));
